# Workflow name
name: backend-cd

on:
  workflow_dispatch:
  push:
    branches:
      - main

jobs:
  Linting:
    runs-on: ubuntu-latest

    steps:
    - name: Check the Repository
      uses: actions/checkout@v4

    - name: Setup Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.10"

    - name: Install Rependencies
      working-directory: starter/backend 
      run:  |
        python -m pip install --upgrade pip
        pip install pipenv
        pip install flake8

    - name: Checkout Run Lint
      run: cd starter/backend && pipenv run lint

  Testing:
    runs-on: ubuntu-latest

    steps:
    - name: Check the Repository
      uses: actions/checkout@v4

    - name: Use Python 3.10
      uses:  actions/setup-python@v5
      with:
        python-version: "3.10"

    - name: Install Dependencies
      working-directory: starter/backend 
      run:  |
        python -m pip install --upgrade pip
        pip install pipenv

    - name: Test
      run: cd starter/backend && pipenv install pytest && pipenv run test

      
  Build:
    needs: [Linting, Testing]
    runs-on: ubuntu-latest
    
    steps:
      - name: Checking Out the code from Repo
        uses: actions/checkout@v3
  
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
          
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
  
      - name: Build, tag, and push docker image to Amazon ECR
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REPOSITORY: backend
          IMAGE_TAG: ${{ github.sha }}
          REACT_APP_MOVIE_API_URL: ${{ secrets.REACT_APP_MOVIE_API_URL }}
        run: |
          cd starter/backend
          docker build --build-arg=REACT_APP_MOVIE_API_URL=$REACT_APP_MOVIE_API_URL -t $REGISTRY/$REPOSITORY:${GITHUB_SHA::7} .
          docker push $REGISTRY/$REPOSITORY:${GITHUB_SHA::7}
      
      - name: Setup Authentication against EKS Cluster 
        run: |
          aws eks update-kubeconfig --name cluster --region us-east-1
          kubectl get svc
          kubectl config view
          
      - name: Deploy the image to the cluster
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        run: |
          cd starter/backend/k8s
          kustomize edit set image backend=${{ steps.login-ecr.outputs.registry }}.dkr.ecr.us-east-1.amazonaws.com/backend:$IMAGE_TAG
          kustomize build | kubectl apply -f -