# Workflow name
name: frontend-ci

# Triggers for the workflow
on:
  # Manual trigger using the workflow_dispatch event
  workflow_dispatch:
      
  # Automatic trigger on pull request events targeting the main branch
  pull_request:
    branches:
      - main

# Jobs defined in the workflow
jobs:
  linting:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Set up Node.js 
        uses: actions/setup-node@v3
        with:
          node-version: latest
      
      - name: Cache node_modules
        uses: actions/cache@v2
        with:
          path: node_modules
          key: ${{ runner.os }}-node-modules-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-modules-
      
      - name: Install dependencies
        run: cd starter/frontend && npm ci

      - name: Run the linter
        run: cd starter/frontend && npm run lint --fix

  testing:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Set up Node.js 
        uses: actions/setup-node@v3
        with:
          node-version: latest
      
      - name: Cache node_modules
        uses: actions/cache@v2
        with:
          path: node_modules
          key: ${{ runner.os }}-node-modules-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-modules-
      
      - name: Install dependencies
        run: cd starter/frontend && npm ci

      - name: Run tests
        run: cd starter/frontend && npm run test

  build:
    needs: [linting, testing]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js 
        uses: actions/setup-node@v4
        with:
          node-version: latest
      
      - name: Cache node_modules
        uses: actions/cache@v2
        with:
          path: node_modules
          key: ${{ runner.os }}-node-modules-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-modules-
      
      - name: Install dependencies
        run: cd starter/frontend && npm ci
  
      - name: Create environment variable
        run: REACT_APP_MOVIE_API_URL=http://localhost:5000 
    
      - name: Build docker image
        run: cd starter/frontend && docker build --build-arg=REACT_APP_MOVIE_API_URL --tag=mp-frontend:latest .
    
      - name: Run docker container
        run: cd starter/frontend && docker run --name mp-frontend -p 3000:3000 -d mp-frontend